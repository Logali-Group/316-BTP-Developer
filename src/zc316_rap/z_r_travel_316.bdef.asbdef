managed;
strict ( 2 );
with draft;

define behavior for z_r_travel_316 alias Travel
implementation in class zbp_r_travel_316_i unique
persistent table ztravel_316
draft table ztravel_316d
lock master
total etag LastChangedAt
authorization master ( global, instance )
etag master LocalLastChangedAt
{
  create ( precheck );
  update ( precheck );
  delete;
  association _Booking { create ( features : instance, authorization : update ); with draft; }

  field ( numbering : managed, readonly ) TravelUUID;

  field ( readonly ) TravelID,
  OverallStatus,
  TotalPrice,
  LastChangedAt,
  LocalCreatedAt,
  LocalCreatedBy,
  LocalLastChangedAt,
  LocalLastChangedBy;

  //Added after the live session {
  field ( mandatory ) CustomerID, AgencyID, BeginDate, EndDate, CurrencyCode;
  // }

  field ( features : instance ) BookingFee;

  action ( features : instance, authorization : update ) acceptTravel result [1] $self;
  action ( features : instance, authorization : update ) rejectTravel result [1] $self;
  action ( features : instance, authorization : update ) deductDiscount
    parameter zae_travel_discount_316 result [1] $self;

  internal action reCalcTotalPrice;

  determination setTravelNumber on save { create; }
  determination setStatusOpen on modify { create; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  validation validateCustomer on save { create; field CustomerID; }
  validation validateAgency on save { create; field AgencyID; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }

  determine action validateCustomerID { validation validateCustomer; }
  determine action validateAgencyID { validation validateAgency; }
  determine action validateDatesRange { validation validateDates; }
  determine action validateCurrencyCodeID { validation validateCurrencyCode; }

  side effects
  {
    field BookingFee affects field TotalPrice;
    determine action validateCustomerID executed on field CustomerID affects messages;
    determine action validateAgencyID executed on field AgencyID affects messages;
    determine action validateDatesRange executed on field BeginDate, field EndDate affects messages;
    determine action validateCurrencyCodeID executed on field CurrencyCode affects messages;
  }

  draft action Resume with additional implementation;
  draft action Edit;
  draft action Activate optimized;
  draft action Discard;

  draft determine action Prepare
  {
    validation validateCustomer;
    validation validateAgency;
    validation validateDates;
    validation validateCurrencyCode;
    validation Booking~validateCustomer;
    validation Booking~validateConnection;
    validation Booking~validateCurrencyCode;
    validation Booking~validateStatus;
    validation Booking~validateFlightPrice;
    validation BookingSupplement~validateSupplement;
    validation BookingSupplement~validateCurrencyCode;
    validation BookingSupplement~validatePrice;
  }

  mapping for ztravel_316
    {
      TravelUUID         = travel_uuid;
      TravelID           = travel_id;
      AgencyID           = agency_id;
      CustomerID         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      LocalCreatedBy     = local_created_by;
      LocalCreatedAt     = local_created_at;
      LocalLastChangedBy = local_last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      LastChangedAt      = last_changed_at;
    }

}

define behavior for z_r_booking_316 alias Booking
implementation in class zbp_r_booking_316_i unique
persistent table zbooking_316
draft table zbooking_316d
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  association _BookingSupplement { create ( authorization : update ); with draft; }

  association _Travel { with draft; }

  field ( numbering : managed, readonly ) BookingUUID;
  field ( readonly ) TravelUUID, BookingID, BookingDate, LocalLastChangedAt;
  field ( mandatory ) CustomerID, AirlineID, ConnectionID, FlightDate, CurrencyCode;

  determination setBookingNumber on save { create; }
  determination setBookingDate on save { create; }
  determination calculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }

  validation validateCustomer on save { create; field CustomerID; }
  validation validateConnection on save { create; field AirlineID, ConnectionID, FlightDate; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validateStatus on save { create; field BookingStatus; }
  validation validateFlightPrice on save { create; field FlightPrice; }

  determine action validateFlightsCosts { validation validateFlightPrice; }

  side effects
  {
    field FlightPrice affects field _Travel.TotalPrice;
    determine action validateFlightsCosts executed on field FlightPrice affects messages;
  }

  mapping for zbooking_316
    {
      AirlineID          = carrier_id;
      BookingDate        = booking_date;
      BookingID          = booking_id;
      BookingStatus      = booking_status;
      BookingUUID        = booking_uuid;
      ConnectionID       = connection_id;
      CurrencyCode       = currency_code;
      CustomerID         = customer_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      LocalLastChangedAt = local_last_changed_at;
      TravelUUID         = parent_uuid;
    }

}

define behavior for z_r_book_suppl_316 alias BookingSupplement
implementation in class zbp_r_bksuppl_316_i unique
persistent table zbksppl_316
draft table zbksppl_316d
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;

  association _Travel { with draft; }
  association _Booking { with draft; }

  field ( numbering : managed, readonly ) BookSupplUUID;
  field ( readonly ) TravelUUID, BookingUUID, BookingSupplementID, LocalLastChangedAt;

  determination setBookSupplNumber on save { create; }
  determination calculateTotalPrice on modify { create; field BookSupplPrice, CurrencyCode; }

  validation validateSupplement on save { create; field SupplementID; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validatePrice on save { create; field BookSupplPrice; }

  determine action validateSupplementPrice { validation validatePrice; }

  side effects
  {
    field BookSupplPrice affects field _Travel.TotalPrice;
    determine action validateSupplementPrice executed on field BookSupplPrice affects messages;
  }

  mapping for zbksppl_316
    {
      BookSupplPrice      = price;
      BookSupplUUID       = booksuppl_uuid;
      BookingSupplementID = booking_supplement_id;
      BookingUUID         = parent_uuid;
      CurrencyCode        = currency_code;
      LocalLastChangedAt  = local_last_changed_at;
      SupplementID        = supplement_id;
      TravelUUID          = root_uuid;
    }

}